---
- name: Install locales
  apt:
    update-cache: yes
    name: locales
    state: present

- name: Update locale-gen configuration
  lineinfile:
    dest: /etc/locale.gen
    regexp: ^# en_US\.UTF-8 UTF-8$
    line: en_US.UTF-8 UTF-8
    backrefs: yes
  register: localegen

- stat: path=/usr/lib/locale/locale-archive
  register: localearchive

- name: Generate en_US.UTF-8 locale
  command: locale-gen --lang en_US.UTF-8
  when: localegen.changed or not localearchive.stat.exists

- stat: path=/etc/crouton/xserverrc-local.example
  register: xserverrclocalexample
- stat: path=/etc/crouton/xserverrc-local
  register: xserverrclocal

- name: Copy xserverrc-local.example
  command: cp /etc/crouton/xserverrc-local.example /etc/crouton/xserverrc-local
  when: xserverrclocalexample.stat.exists and not xserverrclocal.stat.exists

- stat: path=/etc/crouton/xserverrc-local
  register: xserverrclocal

- name: Adjust DPI of xserver
  lineinfile:
    dest: /etc/crouton/xserverrc-local
    regexp: ^#?XARGS="\$XARGS\s+-dpi\s+
    line: XARGS="$XARGS -dpi {{ xserver_dpi }}x{{ xserver_dpi }}"
  when: xserverrclocal.stat.exists

- stat: path=/usr/local/bin/xiwi
  register: xiwi

- name: Install xinput
  apt:
    update-cache: yes
    name: xinput
    state: present
  when: xiwi.stat.exists

- name: Install xiwi user configuration
  copy: src=dot.xiwirc dest=~/.xiwirc
  when: xiwi.stat.exists
  become: yes
  become_user: "{{ primary_user }}"

- name: Add Backups share
  lineinfile:
    dest: /etc/crouton/shares
    regexp: ^encrypted/Backups ~/Backups$
    line: encrypted/Backups ~/Backups

- name: Install mksh
  apt:
    update-cache: yes
    name: mksh
    state: present

- name: Remove BASH configuration
  file: path=~/{{ item }} state=absent
  with_items:
    - .bash_profile
    - .bashrc
    - .bash_history
    - .bash_logout
  become: yes
  become_user: "{{ primary_user }}"

- name: Set shell of primary user
  user: name="{{ primary_user }}" shell=/bin/mksh

- name: Install mksh configuration
  copy: src={{ item.src }} dest=~/{{ item.dest }} mode=0644
  with_items:
    - { src: 'dot.profile', dest: '.profile' }
    - { src: 'dot.mkshrc', dest: '.mkshrc' }
  become: yes
  become_user: "{{ primary_user }}"
- name: Install vim
  apt:
    update-cache: yes
    name: vim
    state: present

- name: Install vim configuration
  copy: src={{ item.src }} dest=~/{{ item.dest }}
  with_items:
    - { src: 'dot.vimrc', dest: '.vimrc' }
    - { src: 'dot.vim/uri-ref-20061101.vim', dest: '.vim/' }
    - { src: 'dot.vim/indent/mail.vim', dest: '.vim/indent/' }
  become: yes
  become_user: "{{ primary_user }}"

- name: Install less
  apt:
    update-cache: yes
    name: less
    state: present

- stat: path=/usr/local/bin/startlxde
  register: startlxde

- name: Create LXDE configuration directories
  file: path={{ item }} state=directory
  with_items:
    - ~/.config/openbox
    - ~/.config/lxsession/LXDE
    - ~/.config/clipit
  when: startlxde.stat.exists
  become: yes
  become_user: "{{ primary_user }}"

- name: Install LXDE OpenBox configuration
  copy: src=/etc/xdg/openbox/LXDE/rc.xml dest=~/.config/openbox/lxde-rc.xml
  when: startlxde.stat.exists
  become: yes
  become_user: "{{ primary_user }}"

- name: Patch LXDE OpenBox configuration
  patch:
    src: LXDE/lxde-rc.xml.patch
    # Can't use ~ as dest
    dest: "/home/{{ primary_user }}/.config/openbox/lxde-rc.xml"
  when: startlxde.stat.exists
  become: yes
  become_user: "{{ primary_user }}"

- name: Install LXDE configuration
  copy: src=LXDE/desktop.conf dest=~/.config/lxsession/LXDE
  when: startlxde.stat.exists
  become: yes
  become_user: "{{ primary_user }}"

- name: Install clipit configuration
  copy: src=LXDE/clipitrc dest=~/.config/clipit/clipitrc
  when: startlxde.stat.exists
  become: yes
  become_user: "{{ primary_user }}"
